"""Initial Migration

Revision ID: d255a6e53c8e
Revises: 
Create Date: 2024-05-25 21:33:32.833853

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'd255a6e53c8e'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('ai_model',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('model_name', sa.String(length=128), nullable=False),
    sa.Column('prompt', sa.Text(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=True),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.Column('points', sa.Integer(), nullable=True),
    sa.Column('auth_type', sa.String(length=128), nullable=True),
    sa.Column('google_id', sa.String(length=128), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_username'), ['username'], unique=True)

    op.create_table('ai_settings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('memory_chunk_size', sa.Integer(), nullable=True),
    sa.Column('ai_model_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['ai_model_id'], ['ai_model.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('google_user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('google_id', sa.String(length=128), nullable=True),
    sa.Column('access_token', sa.String(length=512), nullable=True),
    sa.Column('refresh_token', sa.String(length=512), nullable=True),
    sa.Column('token_expire_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['google_id'], ['user.google_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('message',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('ai_id', sa.Integer(), nullable=False),
    sa.Column('message', sa.Text(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('sender', sa.String(length=64), nullable=True),
    sa.ForeignKeyConstraint(['ai_id'], ['ai_model.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('message', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_message_timestamp'), ['timestamp'], unique=False)

    op.create_table('user_ai',
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('ai_model_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['ai_model_id'], ['ai_model.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], )
    )
    op.create_table('user_settings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timezone', sa.String(length=64), nullable=True),
    sa.Column('messages_per_page', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_settings')
    op.drop_table('user_ai')
    with op.batch_alter_table('message', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_message_timestamp'))

    op.drop_table('message')
    op.drop_table('google_user')
    op.drop_table('ai_settings')
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_username'))

    op.drop_table('user')
    op.drop_table('ai_model')
    # ### end Alembic commands ###
